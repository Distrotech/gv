#! /usr/bin/perl

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GNU gv; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
# Boston, MA 02111-1307, USA.
# 
# Author:   Markus Steinborn (see CONTRIBUTORS for the e-mail address)

# This program updates ~/.gv by removing all incompatible entries.


@res = ();
%res = ();
%resDefault = ();

$saveUnchanged = 1;
$help = 0;

for $i (@ARGV)
{
   $saveUnchanged = 0  if $i eq "-r";
   $help = 1 if $i eq "-h";
}

if ($help)
{
   print "Syntax: gv-update-userconfig [-r]\n\n";
   print "-r : Remove resources that have default value, too\n\n";
   print "gv-update-userconfig is a simple script to update an .gv config file to\n";
   print "the current version of gv by removing all entries known to cause problems\n";
   print "with the current version of gv.\n\n";
}


open ($file, "<", "$ENV{HOME}/.gv") or die "Cannot open ~/.gv for reading.\n";
while (<$file>)
{
   chomp;
   $read = $_;
   $line = $read;
   while ( $read =~ /\\$/ )
   {
      $read = <$file>;
      chomp $read;
      $line .= "\n$read";
   }
   
   push (@res, $line);
   
   if ($line =~ /^([^:]+):/ )
   {
      $res{$1} = $line;
   }
}
close $file;

while (<DATA>)
{
   chomp;
   $read = $_;
   $line = $read;
   while ( $read =~ /\\$/ )
   {
      $read = <DATA>;
      chomp $read;
      $line .= "\n$read";
   }
   
   if ($line =~ /^([^:]+):/ )
   {
      $resDefault{$1} = $line;
   }
}

$VER = "gv 3.5.8";
$VER = $res{"GV.version"} if defined $res{"GV.version"};

%remove = ();


sub compare
{
   my $a1 = $_[0];
   my $a2 = $_[1];
   
   my $b1 = substr($a1,3);
   my $b2 = substr($a2,3);
   
   my @c1 = split(/\./, $b1);
   my @c2 = split(/\./, $b2);
  
   for (my $i = 0; $i < @c1; $i++)
   {
      return 1 if $c1[$i] < $c2[$i];
      return 0 if $c1[$i] > $c2[$i];
   }
   return 0;
   
   print "$b1\n$b2\n";
}

$remove{"GV.version"} = 1;
$remove{"GV.scales"} = 1 if compare($VER, "gv 3.6.4.90");

$newfile = "";

for $line (@res)
{
   if ($line =~ /^([^:]+):/ )
   {
      $name = $1;
      $changed = 0;

      $tmp1 = $resDefault{$name};
      $tmp2 = $line;

      $tmp1 =~ s/\t+/ /g;
      $tmp1 =~ s/\x09+/ /g;
      $tmp1 =~ s/:  +/: /g;
      $tmp1 =~ s/^[\t ]+/\t/mg;
      $tmp1 =~ s/[\t ]+\\n/\\n/g;

      $tmp2 =~ s/\t+/ /g;
      $tmp2 =~ s/\x09+/ /g;
      $tmp2 =~ s/:  +/: /g;
      $tmp2 =~ s/^[\t ]+/\t/mg;
      $tmp2 =~ s/[\t ]+\\n/\\m/g;

      $changed = 1 if $tmp1 ne $tmp2;

      $newfile .= "$line\n" if !defined $remove{$name} and ($saveUnchanged or $changed);
      if (defined $remove{$name} && $name ne "GV.version")
      {
         print "Removing resource $name\n";
      }
      else
      {
	 if (!$saveUnchanged and !$changed)
	 {
            print "Removing default resource $name\n";
	 }
      }
   }
   else
   {
      $newfile .= $line."\n";
   }
}

$newfile .= "GV.version:\t\tgv 3.6.5\n";

open ($file, ">", "$ENV{HOME}/.gv") or die "Cannot open ~/.gv for writing.\n";
print $file $newfile;
close $file;
